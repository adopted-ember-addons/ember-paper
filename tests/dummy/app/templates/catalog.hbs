<DocContent>
  <PaperCard as |card|>
    <card.title>
      <h2>Autocomplete</h2>
    </card.title>
    <card.content>
      <p>
        <PaperAutocomplete
          @disabled={{true}}
          @labelPath='name'
          @noMatchesMessage="Oops this country doesn't exist. Create a new country?"
          @onSelectionChange={{fn (mut this.selectedCountry)}}
          @options={{this.countries}}
          @placeholder='Select a Country...'
          @searchField='name'
          @searchText='Teehee'
        />
      </p>

      <p>
        <PaperAutocomplete
          @disabled={{false}}
          @labelPath='name'
          @noMatchesMessage="Oops this country doesn't exist. Create a new country?"
          @onSelectionChange={{fn (mut this.selectedCountry)}}
          @options={{this.countries}}
          @placeholder='Select a Country...'
          @searchField='name'
          @selected={{this.selectedCountry}}
        />
      </p>

      <PaperAutocomplete
        @allowClear={{false}}
        @disabled={{false}}
        @label='Select a Country...'
        @labelPath='name'
        @noMatchesMessage="Oops this country doesn't exist."
        @onSelectionChange={{fn (mut this.selectedCountry2)}}
        @options={{this.countries}}
        @required={{false}}
        @searchField='name'
        @triggerClass='flex'
        @selected={{this.selectedCountry}}
        as |country select|
      >
        <PaperAutocompleteHighlight
          @label={{country.name}}
          @searchText={{select.searchText}}
          @flags='i'
        />
      </PaperAutocomplete>

      <PaperAutocomplete
        @allowClear={{false}}
        @disabled={{false}}
        @label='Select a Country...'
        @labelPath='name'
        @noMatchesMessage="Oops this country doesn't exist."
        @onSelectionChange={{fn (mut this.selectedCountry2)}}
        @options={{this.countries}}
        @required={{true}}
        @searchField='name'
        @triggerClass='flex'
        @selected={{this.selectedCountry}}
        as |country select|
      >
        <PaperAutocompleteHighlight
          @label={{country.name}}
          @searchText={{select.searchText}}
          @flags='i'
        />
      </PaperAutocomplete>

      <PaperAutocomplete
        @allowClear={{false}}
        @disabled={{true}}
        @label='Select a Country...'
        @labelPath='name'
        @noMatchesMessage="Oops this country doesn't exist."
        @onSelectionChange={{fn (mut this.selectedCountry2)}}
        @options={{this.countries}}
        @required={{false}}
        @searchField='name'
        @selected={{this.selectedCountry2}}
        @triggerClass='flex'
        as |country select|
      >
        <PaperAutocompleteHighlight
          @label={{country.name}}
          @searchText={{select.searchText}}
          @flags='i'
        />
      </PaperAutocomplete>

      <PaperAutocomplete
        @allowClear={{false}}
        @disabled={{true}}
        @label='Select a Country...'
        @labelPath='name'
        @noMatchesMessage="Oops this country doesn't exist."
        @onSelectionChange={{fn (mut this.selectedCountry2)}}
        @options={{this.countries}}
        @required={{true}}
        @searchField='name'
        @selected={{this.selectedCountry2}}
        @triggerClass='flex'
        as |country select|
      >
        <PaperAutocompleteHighlight
          @label={{country.name}}
          @searchText={{select.searchText}}
          @flags='i'
        />
      </PaperAutocomplete>

      <PaperAutocomplete
        @allowClear={{true}}
        @disabled={{false}}
        @label='Select a Country...'
        @labelPath='name'
        @noMatchesMessage="Oops this country doesn't exist."
        @onSelectionChange={{fn (mut this.selectedCountry2)}}
        @options={{this.countries}}
        @required={{false}}
        @searchField='name'
        @selected={{this.selectedCountry2}}
        @triggerClass='flex'
        as |country select|
      >
        <PaperAutocompleteHighlight
          @label={{country.name}}
          @searchText={{select.searchText}}
          @flags='i'
        />
      </PaperAutocomplete>

      <PaperAutocomplete
        @allowClear={{true}}
        @disabled={{false}}
        @label='Select a Country...'
        @labelPath='name'
        @noMatchesMessage="Oops this country doesn't exist."
        @onSelectionChange={{fn (mut this.selectedCountry2)}}
        @options={{this.countries}}
        @required={{true}}
        @searchField='name'
        @selected='not'
        @triggerClass='flex'
        as |country select|
      >
        <PaperAutocompleteHighlight
          @label={{country.name}}
          @searchText={{select.searchText}}
          @flags='i'
        />
      </PaperAutocomplete>
    </card.content>
  </PaperCard>

  <PaperCard as |card|>
    <card.title>
      <h2>Button</h2>
    </card.title>
    <card.content>
      <div class='layout-row'>
        <PaperButton @onClick={{fn this.flatButton}}>Button with action</PaperButton>
        <PaperButton @noink={{true}} @primary={{true}}>Primary (noink)</PaperButton>
        <PaperButton @disabled={{true}}>disabled</PaperButton>
        <PaperButton @warn={{true}}>warn</PaperButton>
        <PaperButton @accent={{true}}>accent</PaperButton>
        <PaperButton
          @href='http://emberjs.com/images/tomsters/original.png'
          @target='_blank'
        >href link</PaperButton>
      </div>
      <p>
        <PaperButton @raised={{true}} @onClick={{fn this.raisedButton}}>
          Button with action
        </PaperButton>
        <PaperButton @raised={{true}} @primary={{true}}>Primary</PaperButton>
        <PaperButton @raised={{true}} @disabled={{true}}>disabled</PaperButton>
        <PaperButton @raised={{true}} @warn={{true}}>warn</PaperButton>
        <PaperButton @raised={{true}} @accent={{true}}>accent</PaperButton>
      </p>
      <CustomButton>
        <p>
          <PaperButton @raised={{true}} @onClick={{fn this.targetButton}}>
            Button with target
          </PaperButton>
          <PaperButton
            @raised={{true}}
            @primary={{true}}
            @onClick={{fn this.targetButton}}
          >
            Button with bubble
          </PaperButton>
          <PaperButton
            @raised={{true}}
            @primary={{true}}
            @onClick={{fn this.targetButton}}
            @bubbles={{false}}
          >
            Button no bubble
          </PaperButton>
        </p>
      </CustomButton>

      <p>
        <PaperButton @raised={{true}} @fab={{true}}>Fab</PaperButton>
        <PaperButton
          @raised={{true}}
          @fab={{true}}
          @accent={{true}}
        >Fab</PaperButton>
        <PaperButton @raised={{true}} @mini={{true}}>Mini</PaperButton>
        <PaperButton
          @raised={{true}}
          @mini={{true}}
          @primary={{true}}
        >Mini</PaperButton>
        <PaperButton @iconButton={{true}}>
          <PaperIcon @icon='accessibility' />
        </PaperButton>
      </p>

      <p>
        <PaperButton @raised={{true}} @label='Blockless version' />
      </p>
    </card.content>
  </PaperCard>
</DocContent>
{{outlet}}